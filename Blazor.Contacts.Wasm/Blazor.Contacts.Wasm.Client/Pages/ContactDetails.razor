@page "/contactdetails"
@page "/contactdetails/{Id:int}"

@using Blazor.Contacts.Wasm.Shared
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

@inject IContactService ContactService
@inject NavigationManager NavigationManager

@if(contact == null)
{
    <p>Loading...</p>
}
else{
<div class="d-flex justify-content-center mt-4">
    <div style="max-width: 800px; min-width: 400px">
        <MudCard Elevation="4">
            <MudCardContent>
                <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                    <MudTextField T="string" Label="FirstName" Required="true" RequiredError="First Name is required!" @bind-Value="@contact.FirstName" />
                    <MudTextField T="string" Label="LastName" Required="true" RequiredError="Last Name is required!" @bind-Value="@contact.LastName" />
                    <MudTextField T="string" Label="Address" Required="false" @bind-Value="@contact.Address" />
                    <MudTextField T="string" Label="Phone" Required="false" @bind-Value="@contact.Phone" />
                </MudForm>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled" 
                            Color="Color.Primary" 
                            Disabled="@(!success)" 
                            Class="ml-auto"
                            OnClick="@(()=>Save())">Save</MudButton>
            </MudCardActions>
        </MudCard>
        
        <MudPaper Class="pa-4 justify-center my-4 mud-text-align-center">
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(()=>form.Reset())" Class="mx-2">Reset</MudButton>
        </MudPaper>

        <MudExpansionPanels>
            <MudExpansionPanel Text="@($"Show Errors ({errors.Length})")">
                @foreach (var error in errors)
                {
                    <MudText Color="@Color.Error">@error</MudText>
                }
            </MudExpansionPanel>
        </MudExpansionPanels>
    </div>
</div>


}



@code{
    [Parameter]
    public int Id { get; set; }


    public Contact contact;

        protected async override Task OnInitializedAsync()
        {
            contact = new Contact();
            if(Id>0)
                contact = await ContactService.GetDetails(Id);
        }

        protected async Task Save()
        {
            await ContactService.SaveContact(contact);
            NavigationManager.NavigateTo("./contactlist");
        }
///TODO: Codigo mejorar
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    ///TODO: Agregar Eliminar/Deshabilitar
    ///TODO: Corregir Update
}
